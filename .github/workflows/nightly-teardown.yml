name: Nightly Infrastructure Teardown

on:
  schedule:
    # 9 PM PST = 5 AM UTC (during PST) / 4 AM UTC (during PDT)
    # Run Friday-Sunday to keep infrastructure down on weekends
    - cron: '0 4 * * 6'  # Saturday 4 AM UTC (Friday 9 PM PDT) - Weekend starts
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to teardown'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
      scope:
        description: 'Infrastructure scope to teardown'
        required: true
        default: 'runtime'
        type: choice
        options:
          - runtime
          - all
      dry_run:
        description: 'Dry run (plan only, no destroy)'
        required: false
        default: false
        type: boolean

jobs:
  teardown:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub-Actions-Teardown-${{ github.run_id }}
          aws-region: us-west-2

      - name: Verify AWS credentials
        run: |
          echo "üîê Verifying AWS credentials..."
          aws sts get-caller-identity
          echo "‚úÖ AWS credentials verified"

      - name: Check infrastructure status (before)
        run: |
          echo "üìä Infrastructure status before teardown:"
          make infra-status ENV=${{ inputs.environment || 'dev' }} AWS_PROFILE="" || echo "Status check failed - continuing with teardown"

      - name: Plan infrastructure teardown
        if: ${{ inputs.dry_run == true }}
        run: |
          echo "üîç Planning infrastructure teardown (dry run)..."
          echo "Note: Terraform destroy does not support separate plan output."
          echo "Showing current state instead:"
          make infra-status ENV=${{ inputs.environment || 'dev' }} AWS_PROFILE=""

      - name: Execute infrastructure teardown
        if: ${{ inputs.dry_run != true }}
        run: |
          echo "üî• Executing infrastructure teardown..."
          ENV="${{ inputs.environment || 'dev' }}"
          SCOPE="${{ inputs.scope || 'runtime' }}"

          # In CI, don't use AWS_PROFILE - OIDC sets environment variables directly
          # Add confirmation for base/all scope destruction
          if [[ "$SCOPE" == "all" ]]; then
            echo "‚ö†Ô∏è Destroying all infrastructure"
            make infra-down SCOPE="$SCOPE" ENV="$ENV" AUTO=true CONFIRM=destroy-all AWS_PROFILE=""
          elif [[ "$SCOPE" == "base" ]]; then
            echo "‚ö†Ô∏è Destroying base infrastructure"
            make infra-down SCOPE="$SCOPE" ENV="$ENV" AUTO=true CONFIRM=destroy-base AWS_PROFILE=""
          else
            make infra-down SCOPE="$SCOPE" ENV="$ENV" AUTO=true AWS_PROFILE=""
          fi

      - name: Check infrastructure status (after)
        if: ${{ inputs.dry_run != true }}
        run: |
          echo "üìä Infrastructure status after teardown:"
          make infra-status ENV=${{ inputs.environment || 'dev' }} AWS_PROFILE="" || echo "Status check completed"

      - name: Calculate cost savings
        if: ${{ inputs.dry_run != true }}
        run: |
          ENV="${{ inputs.environment || 'dev' }}"
          SCOPE="${{ inputs.scope || 'runtime' }}"

          echo "üí∞ Estimated cost savings:"
          if [[ "$SCOPE" == "runtime" ]]; then
            echo "  - Runtime teardown: ~\$1.50/day savings"
            echo "  - Preserved: VPC, NAT, ECR, certificates"
          elif [[ "$SCOPE" == "all" ]]; then
            echo "  - Complete teardown: ~\$3.50/day savings"
            echo "  - Note: NAT Gateway recreation takes 5-10 minutes"
          fi

      - name: Post teardown summary
        if: always()
        run: |
          echo "üéØ Nightly Teardown Summary"
          echo "  Environment: ${{ inputs.environment || 'dev' }}"
          echo "  Scope: ${{ inputs.scope || 'runtime' }}"
          echo "  Dry Run: ${{ inputs.dry_run || 'false' }}"
          echo "  Status: ${{ job.status }}"
          echo ""
          echo "üí° To restore infrastructure:"
          echo "  - Automatic: 8 AM PST via morning-startup workflow"
          echo "  - Manual: make infra-up SCOPE=${{ inputs.scope || 'runtime' }} ENV=${{ inputs.environment || 'dev' }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Nightly teardown failed!"
          echo "üîß Manual intervention may be required"
          echo "üìû Check AWS console and Terraform state"
          echo "üö® Consider manual teardown if automation continues to fail"